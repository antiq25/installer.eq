# arm64-apple-darwin20.0.0-llvm-otool
# Autogenerated from man page /opt/homebrew/anaconda3/share/man/man1/arm64-apple-darwin20.0.0-llvm-otool.1
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o show-objdump-command -d 'Print the objdump (1) command that llvm-otool (1) will execute'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s l -d 'This always implies the'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s h -d 'option, as the objdump (1) option'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o private-headers -d 'prints both the mach header and load commands'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s S -d 'To display the contents of the `__'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o print-armap -d option
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s m -d 'option is always used'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s j -d 'needs to be used'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o macho -d 'option must be used.  The default for objdump (1) is as if the verbose,'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s v -d 'option is always used.   To get the non-verbose output the objdump (1)'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o non-verbose -d 'option is used'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s a -d 'The objdump (1)'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o archive-headers -d 'will print the archive header, if the file is an archive'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o aV -d 'options, the objdump (1)'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o archive-member-offsets -d 'can be added'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s f -d 'The objdump (1) option to display the universal headers is'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o universal-headers
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o private-header
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s L -d 'The objdump (1) option to display the names and version numbers of the shared…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o dylibs-used
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s D -d 'The objdump (1) option to display just the install name of a shared library is'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o dylib-id
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s s -d 'The objdump (1) option to display the contents of the section ( segname,sectn…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o section -d 'where the segname is optional and all segments will be searched for a matchin…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s t -d 'The objdump (1) option to display the contents of the (__TEXT,__text) section…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o tv -d 'otool (1) options then the objdump (1)'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o disassemble -d 'is used'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o tV -d 'options will do.   If this is not wanted then the objdump (1)'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o no-symbolic-operands -d 'option can be used'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s x -d 'The objdump (1) option to display the contents of every __text section define…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o xv -d 'otool (1) options then objdump (1)'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o disassemble-all -d 'is used'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o xV -d 'options will do.   If this is not wanted then the objdump (1)'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s d -d 'The objdump (1) option to display the contents of the (__DATA,__data) section…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s o -d 'The objdump (1) option to display the contents of the __OBJC segment used by …'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o objc-meta-data
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s r -d 'The objdump (1) option to display the relocation entries is'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s I -d 'The objdump (1) option to display the indirect symbol table is'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o indirect-symbols
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s G -d 'The objdump (1) option to display the data in code table is'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o data-in-code
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s C -d 'The objdump (1) option to display the linker optimization hints is'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o link-opt-hints
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s P -d 'The objdump (1) option to print the info plist section, (__TEXT,__info_plist)…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o info-plist
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s p -d 'The objdump (1) option to start the disassembly from symbol name is'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o dis-symname
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s V -d 'For objdump (1) displaying the disassembled operands symbolically is the defa…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s X -d 'The objdump (1) option to not print leading addresses or headers with disasse…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o no-leading-addr
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o mcpu -d 'The objdump (1) option when doing disassembly using the llvm disassembler to …'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o arch -d 'The objdump (1) options to specifies the architectures to operate on are the …'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o no-show-raw-insn
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -l version -d 'The objdump (1) option to display the llvm-otool (1) version information and …'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o version -d '(with one leading dash).  OBSOLETE OPTIONS'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s c -d 'There is no objdump (1) option to display the argument strings (argv[] and en…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s T -d 'There is no objdump (1) option to display the table of contents for a dynamic…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s R -d 'There is no objdump (1) option to display the reference table of a dynamicall…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s M -d 'There is no objdump (1) option to display the module table of a dynamically l…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s H -d 'There is no objdump (1) option to display the two-level namespace hints table…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s i -d 'There is no objdump (1) option to display the shared library initialization t…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s q -d 'There is no objdump (1) option to use the llvm disassembler when doing disass…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -s Q -d 'There is no objdump (1) option to use the otool (1) disassembler when doing d…'
complete -c 'arm64-apple-darwin20.0.0-llvm-otool' -o function_offsets -d 'There is no objdump (1) option when doing disassembly to print the decimal of…'

