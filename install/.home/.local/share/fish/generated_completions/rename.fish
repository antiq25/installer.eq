# rename
# Autogenerated from man page /opt/homebrew/share/man/man1/rename.1
complete -c rename -s h -l help -d 'See a synopsis'
complete -c rename -l man -d 'Browse the manpage'
complete -c rename -s 0 -l null -d 'When reading file names from \\f(CW\\*(C`STDIN\\*(C\', split on \\s-1NUL\\s0 bytes …'
complete -c rename -s f -l force -d 'Rename even when a file with the destination name already exists'
complete -c rename -s g -l glob -d 'Glob filename arguments'
complete -c rename -s i -l interactive -d 'Ask the user to confirm every action before it is taken'
complete -c rename -s k -l backwards -l reverse-order -d 'Process the list of files in reverse order, last file first'
complete -c rename -s l -l symlink -d 'Create symlinks from the new names to the existing ones, instead of renaming …'
complete -c rename -s L -l hardlink -d 'Create hard links from the new names to the existing ones, instead of renamin…'
complete -c rename -s M -l use -d 'Like perl\'s own \\f(CW\\*(C`-M\\*(C\' switch'
complete -c rename -s n -l dry-run -l just-print -d 'Show how the files would be renamed, but don\'t actually do anything'
complete -c rename -o N/--counter-format -d 'Format and set the \\f(CW$N counter variable according to the given template'
complete -c rename -s p -l mkpath -l make-dirs -d 'Create any non-existent directories in the target path'
complete -c rename -l stdin -l no-stdin -d 'Always X or never X read the list of filenames from \\s-1STDIN\\s0; do not gues…'
complete -c rename -s T -l transcode -d 'Decode each filename before processing and encode it after processing, accord…'
complete -c rename -s v -l verbose -d 'Print additional information about the operations (not) executed'
complete -c rename -s a -l append -d 'Append the string argument you supply to every filename'
complete -c rename -s A -l prepend -d 'Prepend the string argument you supply to every filename'
complete -c rename -s c -l lower-case -d 'Convert file names to all lower case'
complete -c rename -s C -l upper-case -d 'Convert file names to all upper case'
complete -c rename -s e -l expr -d 'The \\f(CW\\*(C`code\\*(C\' argument to this option should be a Perl expression t…'
complete -c rename -s P -l pipe -d 'Pass the filename to an external command on its standard input and read back …'
complete -c rename -s s -l subst -d 'Perform a simple textual substitution of \\f(CW\\*(C`from\\*(C\' to \\f(CW\\*(C`to\\…'
complete -c rename -s S -l subst-all -d 'Same as \\f(CW\\*(C`-s\\*(C\', but replaces every instance of the \\f(CW\\*(C`from\\…'
complete -c rename -s x -l remove-extension -d 'Remove the last extension from a filename, if there is any'
complete -c rename -s X -l keep-extension -d 'Save and remove the last extension from a filename, if there is any'
complete -c rename -s z -l sanitize -d 'A shortcut for passing \\f(CW\\*(C`--nows --noctrl --nometa --trim\\*(C\''
complete -c rename -l camelcase -d 'Capitalise every separate word within the filename'
complete -c rename -l urlesc -d 'Decode URL-escaped filenames, such as wget\\|(1) used to produce'
complete -c rename -l nows -d 'Replace all sequences of whitespace in the filename with single underscore ch…'
complete -c rename -l rews -d 'Reverse \\f(CW\\*(C`--nows\\*(C\': replace each underscore in the filename with a…'
complete -c rename -l noctrl -d 'Replace all sequences of control characters in the filename with single under…'
complete -c rename -l nometa -d 'Replace every shell meta-character with an underscore'

