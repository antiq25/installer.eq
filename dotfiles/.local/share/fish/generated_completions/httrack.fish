# httrack
# Autogenerated from man page /opt/homebrew/share/man/man1/httrack.1
complete -c httrack -s O -d 'path for mirror/logfiles+cache (-O path mirror[,path cache and logfiles]) (--…'
complete -c httrack -s w -d '*mirror web sites (--mirror)'
complete -c httrack -s W -d 'mirror web sites, semi-automatic (asks questions) (--mirror-wizard)'
complete -c httrack -s g -d 'just get files (saved in the current directory) (--get-files)'
complete -c httrack -s i -d 'continue an interrupted mirror using the cache (--continue)'
complete -c httrack -s Y -d 'mirror ALL links located in the first level pages (mirror links) (--mirrorlin…'
complete -c httrack -s P -d 'proxy use (-P proxy:port or -P user:pass@proxy:port) (--proxy <param>)'
complete -c httrack -o '%f' -d '*use proxy for ftp (f0 don t use) (--httpproxy-ftp[=N])'
complete -c httrack -o '%b' -d 'use this local hostname to make/send requests (-%b hostname) (--bind <param>)…'
complete -c httrack -o rN -d 'set the mirror depth to N (* r9999) (--depth[=N])'
complete -c httrack -o '%eN' -d 'set the external links depth to N (* %e0) (--ext-depth[=N])'
complete -c httrack -o mN -d 'maximum file length for a non-html file (--max-files[=N])'
complete -c httrack -o MN -d 'maximum overall size that can be uploaded/scanned (--max-size[=N])'
complete -c httrack -o EN -d 'maximum mirror time in seconds (60=1 minute, 3600=1 hour) (--max-time[=N])'
complete -c httrack -o AN -d 'maximum transfer rate in bytes/seconds (1000=1KB/s max) (--max-rate[=N])'
complete -c httrack -o '%cN' -d 'maximum number of connections/seconds (*%c10) (--connection-per-second[=N])'
complete -c httrack -o GN -d 'pause transfer if N bytes reached, and wait until lock file is deleted (--max…'
complete -c httrack -o cN -d 'number of multiple connections (*c8) (--sockets[=N])'
complete -c httrack -o TN -d 'timeout, number of seconds after a non-responding link is shutdown (--timeout…'
complete -c httrack -o RN -d 'number of retries, in case of timeout or non-fatal errors (*R1) (--retries[=N…'
complete -c httrack -o JN -d 'traffic jam control, minimum transfert rate (bytes/seconds) tolerated for a l…'
complete -c httrack -o HN -d 'host is abandonned if: 0=never, 1=timeout, 2=slow, 3=timeout or slow (--host-…'
complete -c httrack -o '%P' -d '*extended parsing, attempt to parse all links, even in unknown tags or Javasc…'
complete -c httrack -s n -d 'get non-html files  near  an html file (ex: an image located outside) (--near)'
complete -c httrack -s t -d 'test all URLs (even forbidden ones) (--test)'
complete -c httrack -o '%L' -d '<file> add all URL located in this text file (one URL per line) (--list <para…'
complete -c httrack -o '%S' -d '<file> add all scan rules located in this text file (one scan rule per line) …'
complete -c httrack -o NN -d 'structure type (0 *original structure, 1+: see below) (--structure[=N])'
complete -c httrack -o or -d 'user defined structure (-N "%h%p/%n%q. %t")'
complete -c httrack -o '%N' -d 'delayed type check, don t make any link test but wait for files download to s…'
complete -c httrack -o '%D' -d 'cached delayed type check, don t wait for remote type during updates, to spee…'
complete -c httrack -o '%M' -d 'generate a RFC MIME-encapsulated full-archive (. mht) (--mime-html)'
complete -c httrack -o LN -d 'long names (L1 *long names / L0 8-3 conversion / L2 ISO9660 compatible) (--lo…'
complete -c httrack -o KN -d 'keep original links (e. g.  http://www'
complete -c httrack -s x -d 'replace external html links by error pages (--replace-external)'
complete -c httrack -o '%x' -d 'do not include any password for external password protected websites (%x0 inc…'
complete -c httrack -o '%q' -d '*include query string for local files (useless, for information purpose only)…'
complete -c httrack -s o -d '*generate output html file in case of error (404'
complete -c httrack -s X -d '*purge old files after update (X0 keep delete) (--purge-old[=N])'
complete -c httrack -o '%p' -d 'preserve html files  as is  (identical to  -K4 -%F "" ) (--preserve)'
complete -c httrack -o '%T' -d 'links conversion to UTF-8 (--utf8-conversion)  . SS Spider options:'
complete -c httrack -o bN -d 'accept cookies in cookies. txt (0=do not accept,* 1=accept) (--cookies[=N])'
complete -c httrack -s u -d 'check document type if unknown (cgi,asp'
complete -c httrack -s j -d '*parse Java Classes (j0 don t parse, bitmask: |1 parse default, |2 don t pars…'
complete -c httrack -o sN -d 'follow robots'
complete -c httrack -o '%h' -d 'force HTTP/1'
complete -c httrack -o '%k' -d 'use keep-alive if possible, greately reducing latency for small files and tes…'
complete -c httrack -o '%B' -d 'tolerant requests (accept bogus responses on some servers, but not standard!)…'
complete -c httrack -o '%s' -d 'update hacks: various hacks to limit re-transfers when updating (identical si…'
complete -c httrack -o '%u' -d 'url hacks: various hacks to limit duplicate URLs (strip //, www. foo'
complete -c httrack -o '%A' -d 'assume that a type (cgi,asp'
complete -c httrack -o can -d 'also be used to force a specific file type: --assume foo. cgi=text/html'
complete -c httrack -o @iN -d 'internet protocol (0=both ipv6+ipv4, 4=ipv4 only, 6=ipv6 only) (--protocol[=N…'
complete -c httrack -o '%w' -d 'disable a specific external mime module (-%w htsswf -%w htsjava) (--disable-m…'
complete -c httrack -s F -d 'user-agent field sent in HTTP headers (-F "user-agent name") (--user-agent <p…'
complete -c httrack -o '%R' -d 'default referer field sent in HTTP headers (--referer <param>)'
complete -c httrack -o '%E' -d 'from email address sent in HTTP headers (--from <param>)'
complete -c httrack -o '%F' -d 'footer string in Html code (-%F "Mirrored [from host %s [file %s [at %s]]]" (…'
complete -c httrack -o '%l' -d 'preffered language (-%l "fr, en, jp, *" (--language <param>)'
complete -c httrack -o '%a' -d 'accepted formats (-%a "text/html,image/png;q=0. 9,*/*;q=0'
complete -c httrack -o '%X' -d 'additional HTTP header line (-%X "X-Magic: 42" (--headers <param>)  '
complete -c httrack -s C -d 'create/use a cache for updates and retries (C0 no cache,C1 cache is prioritar…'
complete -c httrack -s k -d 'store all files in cache (not useful if files on disk) (--store-all-in-cache)'
complete -c httrack -o '%n' -d 'do not re-download locally erased files (--do-not-recatch)'
complete -c httrack -o '%v' -d 'display on screen filenames downloaded (in realtime) - * %v1 short version - …'
complete -c httrack -s Q -d 'no log - quiet mode (--do-not-log)'
complete -c httrack -s q -d 'no questions - quiet mode (--quiet)'
complete -c httrack -s z -d 'log - extra infos (--extra-log)'
complete -c httrack -s Z -d 'log - debug (--debug-log)'
complete -c httrack -s v -d 'log on screen (--verbose)'
complete -c httrack -s f -d '*log in files (--file-log)'
complete -c httrack -o f2 -d 'one single log file (--single-log)'
complete -c httrack -s I -d '*make an index (I0 don t make) (--index)'
complete -c httrack -o '%i' -d 'make a top index for a project folder (* %i0 don t make) (--build-top-index)'
complete -c httrack -o '%I' -d 'make an searchable index for this mirror (* %I0 don t make) (--search-index)  '
complete -c httrack -o pN -d 'priority mode: (* p3) (--priority[=N])'
complete -c httrack -o p0 -d 'just scan, don t save anything (for checking links)'
complete -c httrack -o p1 -d 'save only html files'
complete -c httrack -o p2 -d 'save only non html files'
complete -c httrack -o '*p3' -d 'save all files'
complete -c httrack -o p7 -d 'get html files before, then treat other files'
complete -c httrack -s S -d 'stay on the same directory (--stay-on-same-dir)'
complete -c httrack -s D -d '*can only go down into subdirs (--can-go-down)'
complete -c httrack -s U -d 'can only go to upper directories (--can-go-up)'
complete -c httrack -s B -d 'can both go up&down into the directory structure (--can-go-up-and-down)'
complete -c httrack -s a -d '*stay on the same address (--stay-on-same-address)'
complete -c httrack -s d -d 'stay on the same principal domain (--stay-on-same-domain)'
complete -c httrack -s l -d 'stay on the same TLD (eg: . com) (--stay-on-same-tld)'
complete -c httrack -s e -d 'go everywhere on the web (--go-everywhere)'
complete -c httrack -o '%H' -d 'debug HTTP headers in logfile (--debug-headers)  '
complete -c httrack -o '#X' -d '*use optimized engine (limited memory boundary checks) (--fast-engine)'
complete -c httrack -o '#0' -d 'filter test (-#0  *. gif   www. bar. com/foo'
complete -c httrack -o '#1' -d 'simplify test (-#1 . /foo/bar/. /foobar)'
complete -c httrack -o '#2' -d 'type test (-#2 /foo/bar. php)'
complete -c httrack -o '#C' -d 'cache list (-#C  *. com/spider*. gif  (--debug-cache <param>)'
complete -c httrack -o '#R' -d 'cache repair (damaged cache) (--repair-cache)'
complete -c httrack -o '#d' -d 'debug parser (--debug-parsing)'
complete -c httrack -o '#E' -d 'extract new. zip cache meta-data in meta. zip'
complete -c httrack -o '#f' -d 'always flush log files (--advanced-flushlogs)'
complete -c httrack -o '#FN' -d 'maximum number of filters (--advanced-maxfilters[=N])'
complete -c httrack -o '#h' -d 'version info (--version)'
complete -c httrack -o '#K' -d 'scan stdin (debug) (--debug-scanstdin)'
complete -c httrack -o '#L' -d 'maximum number of links (-#L1000000) (--advanced-maxlinks[=N])'
complete -c httrack -o '#p' -d 'display ugly progress information (--advanced-progressinfo)'
complete -c httrack -o '#P' -d 'catch URL (--catch-url)'
complete -c httrack -o '#T' -d 'generate transfer ops.  log every minutes (--debug-xfrstats)'
complete -c httrack -o '#u' -d 'wait time (--advanced-wait)'
complete -c httrack -o '#Z' -d 'generate transfer rate statictics every minutes (--debug-ratestats)  '
complete -c httrack -s '%' -d 'bypass built-in security limits aimed to avoid bandwidth abuses (bandwidth, s…'
complete -c httrack -o IMPORTANT -d 'NOTE: DANGEROUS OPTION, ONLY SUITABLE FOR EXPERTS'
complete -c httrack -o USE -d 'IT WITH EXTREME CARE  . SS Command-line specific options:'
complete -c httrack -s V -d 'execute system command after each files ($0 is the filename: -V "rm \\\\$0") (-…'
complete -c httrack -o '%W' -d 'use an external library function as a wrapper (-%W myfoo'
complete -c httrack -o N0 -d 'Site-structure (default)'
complete -c httrack -o N1 -d 'HTML in web/, images/other files in web/images/'
complete -c httrack -o N2 -d 'HTML in web/HTML, images/other in web/images'
complete -c httrack -o N3 -d 'HTML in web/,  images/other in web/'
complete -c httrack -o N4 -d 'HTML in web/, images/other in web/xxx, where xxx is the file extension (all g…'
complete -c httrack -o N5 -d 'Images/other in web/xxx and HTML in web/HTML'
complete -c httrack -o N99 -d 'All files in web/, with random names (gadget !)'
complete -c httrack -o N100 -d 'Site-structure, without www. domain. xxx/'
complete -c httrack -o N101 -d 'Identical to N1 exept that "web" is replaced by the site s name'
complete -c httrack -o N102 -d 'Identical to N2 exept that "web" is replaced by the site s name'
complete -c httrack -o N103 -d 'Identical to N3 exept that "web" is replaced by the site s name'
complete -c httrack -o N104 -d 'Identical to N4 exept that "web" is replaced by the site s name'
complete -c httrack -o N105 -d 'Identical to N5 exept that "web" is replaced by the site s name'
complete -c httrack -o N199 -d 'Identical to N99 exept that "web" is replaced by the site s name'
complete -c httrack -o N1001 -d 'Identical to N1 exept that there is no "web" directory'
complete -c httrack -o N1002 -d 'Identical to N2 exept that there is no "web" directory'
complete -c httrack -o N1003 -d 'Identical to N3 exept that there is no "web" directory (option set for g opti…'
complete -c httrack -o N1004 -d 'Identical to N4 exept that there is no "web" directory'
complete -c httrack -o N1005 -d 'Identical to N5 exept that there is no "web" directory'
complete -c httrack -o N1099 -d 'Identical to N99 exept that there is no "web" directory '
complete -c httrack -o param -d ': parameter name'
complete -c httrack -o before -d ': string to prepend if the parameter was found'
complete -c httrack -o after -d ': string to append if the parameter was found'
complete -c httrack -o notfound -d ': string replacement if the parameter could not be found'
complete -c httrack -o empty -d ': string replacement if the parameter was empty'
complete -c httrack -o all -d 'fields, except the first one (the parameter name), can be empty  '
complete -c httrack -o K0 -d 'foo. cgi?q=45  ->  foo4B54. html?q=45 (relative URI, default)'
complete -c httrack -s K -d '->  http://www. foobar. com/folder/foo'
complete -c httrack -o K3 -d '->  /folder/foo. cgi?q=45 (absolute URI)'
complete -c httrack -o K4 -d '->  foo. cgi?q=45 (original URL)'
complete -c httrack -o K5 -d '->  http://www. foobar. com/folder/foo4B54'
complete -c httrack -l mirror -d '<URLs> *make a mirror of site(s) (default)'
complete -c httrack -l get -d '<URLs>  get the files indicated, do not seek other URLs (-qg)'
complete -c httrack -l list -d '<text file>  add all URL located in this text file (-%L)'
complete -c httrack -l mirrorlinks -d '<URLs>  mirror all links in 1st level pages (-Y)'
complete -c httrack -l testlinks -d '<URLs>  test links in pages (-r1p0C0I0t)'
complete -c httrack -l spider -d '<URLs>  spider site(s), to test links: reports Errors & Warnings (-p0C0I0t)'
complete -c httrack -l testsite -d '<URLs>  identical to --spider'
complete -c httrack -l skeleton -d '<URLs>  make a mirror, but gets only html files (-p1)'
complete -c httrack -l update -d 'update a mirror, without confirmation (-iC2)'
complete -c httrack -l continue -d 'continue a mirror, without confirmation (-iC1)'
complete -c httrack -l catchurl -d 'create a temporary proxy to capture an URL or a form post URL'
complete -c httrack -l clean -d 'erase cache & log files'
complete -c httrack -s '>' -l keep-links
complete -c httrack -l http10 -d '             force http/1. 0 requests (-%h)'

