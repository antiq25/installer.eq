# arm64-apple-darwin20.0.0-checksyms
# Autogenerated from man page /opt/homebrew/anaconda3/share/man/man1/arm64-apple-darwin20.0.0-checksyms.1
complete -c 'arm64-apple-darwin20.0.0-checksyms' -s r -d 'The binary is expected to do runtime loading of bundles and is allowed to hav…'
complete -c 'arm64-apple-darwin20.0.0-checksyms' -s d -d 'Print the detail of why the binary fails the checks'
complete -c 'arm64-apple-darwin20.0.0-checksyms' -s v -d 'Print a single string token for each of the checks the binary fails'
complete -c 'arm64-apple-darwin20.0.0-checksyms' -s t -d 'Allow all symbols except debugging symbols (those created by the compiler\'s  …'
complete -c 'arm64-apple-darwin20.0.0-checksyms' -s b -d 'Check the binaries that use the dynamic linker to see that they do not have r…'
complete -c 'arm64-apple-darwin20.0.0-checksyms' -o arch -d 'Specifies the architecture,  arch_type, in the file to check'
complete -c 'arm64-apple-darwin20.0.0-checksyms' -o dylib_table -d 'This option has been removed'
complete -c 'arm64-apple-darwin20.0.0-checksyms' -o seg_addr_table -d 'This option has been removed'
complete -c 'arm64-apple-darwin20.0.0-checksyms' -s g -d 'option)'
complete -c 'arm64-apple-darwin20.0.0-checksyms' -o seg1addr -d 'In the second form is used for ``split\'\' libraries and the first address is t…'
complete -c 'arm64-apple-darwin20.0.0-checksyms' -o segs_read_only_addr -d 'address and the second address is the'
complete -c 'arm64-apple-darwin20.0.0-checksyms' -o segs_read_write_addr -d 'address.  If the'
complete -c 'arm64-apple-darwin20.0.0-checksyms' -o seg_addr_table_filename -d 'This option has been removed'

