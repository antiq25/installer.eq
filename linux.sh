#!/bin/bash

# List of packages to be installed
packages=(
 "ack"
 "act"
 "glib"
 "libxext"
 "cairo"
 "xz"
 "gdk-pixbuf"
 "harfbuzz"
 "pango"
 "librsvg"
 "adwaita-icon-theme"
 "openssl@3"
 "pcre"
 "sqlite"
 "aircrack-ng"
 "airspy"
 "aom"
 "apr-util"
 "gmp"
 "gcc"
 "hdf5"
 "armadillo"
 "ncurses"
 "perl"
 "asciiquarium"
 "autoconf"
 "automake"
 "coreutils"
 "asdf"
 "at-spi2-core"
 "atool"
 "python-setuptools"
 "python@3.11"
 "awscli"
 "bash"
 "bash-completion@2"
 "c-ares"
 "node"
 "bash-language-server"
 "bash-snippets"
 "bat"
 "fmt"
 "protobuf"
 "grpc"
 "nlohmann-json"
 "spdlog"
 "bear"
 "bettercap"
 "openjdk"
 "bfg"
 "binutils"
 "p7zip"
 "pillow"
 "binwalk"
 "bison"
 "blueutil"
 "boost"
 "bottom"
 "-cask-completion"
 "brightness"
 "btop"
 "caddy"
 "calcurse"
 "gnutls"
 "emacs", restart_service: true
 "cask"
 "python@3.12"
 "ccls"
 "cgl"
 "chafa"
 "cifer"
 "clang-format"
 "cmake"
 "cmatrix"
 "crunch"
 "ctags"
 "openldap"
 "curl"
 "deno"
 "dex2jar"
 "dns2tcp"
 "dnsmasq"
 "docker"
 "dooit"
 "dotnet"
 "duti"
 "efm-langserver"
 "eslint"
 "exiv2"
 "fastfetch"
 "fcrackzip"
 "fd"
 "libice"
 "libsm"
 "libxinerama"
 "feh"
 "libmicrohttpd"
 "tesseract"
 "ffmpeg"
 "figlet"
 "findutils"
 "fish"
 "fisher"
 "woff2"
 "fontforge"
 "fonttools"
 "foremost"
 "freetds"
 "fzf"
 "gawk"
 "gd"
 "gh"
 "ghostscript"
 "git"
 "git-crypt"
 "git-filter-repo"
 "git-flow"
 "git-lfs"
 "glfw"
 "gsettings-desktop-schemas"
 "glib-networking"
 "glow"
 "glslang"
 "gnu-sed"
 "gnupg"
 "lua"
 "gnuplot"
 "go"
 "pkg-config"
 "gobject-introspection"
 "graphene"
 "grep"
 "gsl"
 "gtk+3"
 "libpsl"
 "libsoup"
 "gstreamer"
 "gtk+"
 "gtksourceview4"
 "xxhash"
 "hashcat"
 "hashpump"
 "hcxtools"
 "hstr"
 "httrack"
 "libfido2"
 "mysql-client"
 "hydra"
 "ical-buddy"
 "ifstat"
 "libomp"
 "imagemagick"
 "imagemagick@6"
 "john"
 "jpeg"
 "jq"
 "jrnl"
 "jython"
 "keychain"
 "knock"
 "krb5"
 "lazydocker"
 "lazygit"
 "lftp"
 "libadwaita"
 "libclc"
 "libffi"
 "libnice"
 "libosinfo"
 "libpcap"
 "libpq"
 "librsync"
 "libsixel"
 "libsoup@2"
 "libtermkey"
 "libvirt", restart_service: true
 "libvterm"
 "libxaw"
 "libxft"
 "libxml2"
 "llvm"
 "lolcat"
 "lsd"
 "lua-language-server"
 "luacheck"
 "luajit"
 "luarocks"
 "luv"
 "lynx"
 "macos-term-size"
 "magic-wormhole"
 "make"
 "mas"
 "mesa"
 "meson"
 "micro"
 "molten-vk"
 "mongosh"
 "moreutils"
 "msgpack"
 "mysql"
 "nmap"
 "ripgrep"
 "w3m"
 "nb"
 "ncdu"
 "neofetch"
 "neovim"
 "netcat"
 "netpbm"
 "nss"
 "oh-my-posh"
 "opencl-clhpp-headers"
 "openssh"
 "php"
 "pidof"
 "zopfli"
 "pigz"
 "pipes-sh"
 "pipx"
 "pngcheck"
 "poetry"
 "postgresql@12"
 "postgresql@14"
 "postgresql@15"
 "pre-commit"
 "prettier"
 "proxychains-ng"
 "putty"
 "pv"
 "pyright"
 "python-gdbm@3.11"
 "python-launcher"
 "python-tk@3.11"
 "python@3.10"
 "python@3.8"
 "python@3.9"
 "pytorch"
 "qemu"
 "qt@5"
 "ranger"
 "reaver"
 "recon-ng"
 "rename"
 "rlwrap"
 "ruby"
 "rust"
 "rustup-init"
 "screen"
 "shellcheck"
 "shfmt"
 "socat"
 "speedtest-cli"
 "spice-gtk"
 "sql-language-server"
 "sqlmap"
 "ssh-copy-id"
 "starship"
 "switchaudio-osx"
 "tcpflow"
 "tcpreplay"
 "tcptrace"
 "thefuck"
 "tldr"
 "tmux"
 "topgrade"
 "transmission-cli"
 "trash-cli"
 "tree"
 "ucspi-tcp"
 "vbindiff"
 "vlang"
 "vte3"
 "webpack"
 "wego"
 "wget"
 "wireguard-go"
 "wireshark"
 "wtfutil"
 "xclip"
 "xmlformat"
 "xpdf"
 "xterm"
 "yaml-language-server"
 "zsh"
 "zsh-autosuggestions"
 "zsh-completions"
 )

# Function to check if a package is available in snap
install_snap_package() {
    local package=$1
    local channel="stable"
    if snap info "$package" | grep -q "classic"; then
        echo "Installing $package via snap (classic)..."
        sudo snap install "$package" --classic --$channel
    elif snap info "$package" | grep -q "edge"; then
        echo "Installing $package via snap (edge)..."
        sudo snap install "$package" --edge
    else
        echo "Installing $package via snap..."
        sudo snap install "$package" --$channel
    fi
}

# Function to install a package via apt
install_apt_package() {
    local package=$1
    if dpkg -l | grep -q "ii  $package"; then
        echo "$package is already installed via apt."
    else
        echo "Installing $package via apt..."
        sudo apt install -y "$package"
    fi
}

# Loop through the list of packages and install them using snap or apt
for package in "${packages[@]}"; do
    if snap info "$package" &>/dev/null; then
        install_snap_package "$package"
    else
        install_apt_package "$package"
    fi
done